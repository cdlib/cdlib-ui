// ***** Utilities ***** //

// Element Highlighting for Testing

// Ex: outline: $test1;

$test1: #f00 solid 1px; // red
$test2: #00f solid 1px; // blue
$test3: #080 solid 1px; // green

// Media Query Breakpoints

/* Ex:

.selector {
  property: $value;

  @include screen1 {
    property: $value;
  }

  @include screen2 {
    property: $value;
  }

  @include screen3 {
    property: $value;
  }

}

*/

@mixin screen1 {
  @media (min-width: $screen1) {
    @content;
  }
}

@mixin screen2 {
  @media (min-width: $screen2) {
    @content;
  }
}

@mixin screen3 {
  @media (min-width: $screen3) {
    @content;
  }
}

@mixin screen4 {
  @media (min-width: $screen4) {
    @content;
  }
}

// Set an interactive element's minimum width and height:

%u-interactive-element-size { 
  // for mouse pointers:
  min-width: $pointer-size-fine;
  min-height: $pointer-size-fine;
  
  // for touch screens:
  @media (any-pointer: coarse) {
    min-width: $pointer-size-coarse;
    min-height: $pointer-size-coarse;
  }

}

// Unordered lists without space or bullets:

%u-reset-list-styles {
  margin: 0;
  padding: 0;

  li {
    list-style: none;
  }

}

// Hide something visually but not for screen readers:

@mixin u-hide {
  position: absolute;
  left: -9999px;
}

// Generate heading elements h1 through h6 in a single selector (https://trulycode.com/bytes/sass-function-loop-headings-h1h2h3h4h5h6/):

@function u-heading($from: 1, $to: 6) {
  @if $from == $to {
    @return 'h#{$from}';
  } @else {
    @return 'h#{$from},' + u-heading($from + 1, $to);
  }
}

// Alternate version:

@mixin u-heading2($color: $color-black, $size: 1em, $weight: bold) {
  @for $i from 1 through 6 {
    h#{$i} {
      color: $color;
      font-size: $size;
      font-weight: $weight;
      @content
    }
  }
}
