// ***** Utilities ***** //

// Element Highlighting for Testing

// Ex: outline: $test1;

$test1: #f00 solid 1px; // red
$test2: #00f solid 1px; // blue
$test3: #080 solid 1px; // green

// Media Query Breakpoints

/* Ex:

.selector {
  property: $value;

  @include screen1 {
    property: $value;
  }

  @include screen2 {
    property: $value;
  }

  @include screen3 {
    property: $value;
  }

}

*/

@mixin screen1 {
  @media (min-width: $screen1) {
    @content;
  }
}

@mixin screen2 {
  @media (min-width: $screen2) {
    @content;
  }
}

@mixin screen3 {
  @media (min-width: $screen3) {
    @content;
  }
}

@mixin screen4 {
  @media (min-width: $screen4) {
    @content;
  }
}

// Set an interactive element's minimum width and height:

@mixin u-interactive-element-min-size($state: enabled) {

  @if $state == enabled {
    // default sizing:
    min-width: $pointer-size-fine;
    min-height: $pointer-size-fine;
    
    // for touch screens:
    @media (any-pointer: coarse) {
      min-width: $pointer-size-coarse;
      min-height: $pointer-size-coarse;
    }

  }

  @if $state == disabled {
    min-width: auto;
    min-height: auto;

    @media (any-pointer: coarse) {
      min-width: auto;
      min-height: auto;
    }

  }

}

// Disable general link icons:

@mixin u-disable-general-link-icon {

  &[data-wpel-link],
  &[href] {
    padding-right: auto;
    background: none;
  }

}

// Disable file type link icons:

@mixin u-disable-filetype-link-icon {

  &::after {
    display: none;
  }

}

// Unordered lists without space or bullets:

%u-reset-list-styles {
  margin-top: 0;
  margin-bottom: 0;
  padding-right: 0;
  padding-left: 0;
  line-height: normal;
  list-style-type: none;

  li {
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0;
  }

}

// Hide something visually but not for screen readers:

@mixin u-hide {
  position: absolute;
  left: -9999px;
}

// Bleed component to left/right of viewport by equalling <body> left/right padding:

%u-page-bleed {
  margin-right: (-$space1);
  margin-left: (-$space1);

  @include screen2 {
    margin-right: (-$space2);
    margin-left: (-$space2);
  }

}

%u-sidebar-item-top-bottom-margins {

  > * {
    margin-top: $space3;
    margin-bottom: $space3;

    &:first-child {
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }

  }

}

%u-break-words {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  hyphens: auto;
}

// Hide element containing 'v-cloak' attribute until vue.js instance is ready:

@mixin u-hide-until-vue-ready($show-bp: null, $el-display: block) {

  &[v-cloak] {
    display: none;
  }

  @if $show-bp != null {

    @media (min-width: $show-bp) {

      &[v-cloak] {
        display: $el-display;
      }

    }

  }

}
